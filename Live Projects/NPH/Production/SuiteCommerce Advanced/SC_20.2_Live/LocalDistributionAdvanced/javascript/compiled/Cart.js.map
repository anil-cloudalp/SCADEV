{"version":3,"sources":["Cart.ts"],"names":[],"mappings":"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","file":"Cart.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Cart\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport CartDetailedView = require('./Cart.Detailed.View');\nimport CartConfirmationHelpers = require('./Cart.Confirmation.Helpers');\nimport CartComponent = require('./Cart.Component');\n\n/*\n    @class Cart\n\n    Defines the Cart module\n\n    mountToApp() handles some environment issues\n\n    @extends ApplicationModule\n*/\nexport = {\n    mountToApp: function mountToApp(application) {\n        this.cart_model = LiveOrderModel.getInstance();\n\n        // Check if cart was bootstrapped\n        if (!SC.ENVIRONMENT.CART_BOOTSTRAPED) {\n            // Load the cart information\n            LiveOrderModel.loadCart();\n        } else if (!_.isEmpty(SC.ENVIRONMENT.CART)) {\n            const cart = SC.ENVIRONMENT.CART;\n\n            // If the condition below is false, that means the cart is empty.\n            // I would suggest to remove the confirmation\n            // property if not required as a sustainability task.\n            if (!(Object.keys(cart).length === 1 && cart.hasOwnProperty('confirmation'))) {\n                this.cart_model.set(cart);\n                this.cart_model.cartLoad = this.cart_model.cartLoad || jQuery.Deferred();\n                this.cart_model.isLoading = false;\n                this.cart_model.cartLoad.resolveWith(cart);\n            }\n        }\n\n        const self = this;\n\n        // IMPORTANT: This api/method is preserve ONLY for Bronto Integration.\n        // IT IS NOT A PUBLIC API!\n        application.getCart = function getCart() {\n            console.warn('Using application.getCart is deprecated!');\n            const cart_promise = jQuery.Deferred();\n\n            LiveOrderModel.loadCart()\n                .done(function() {\n                    cart_promise.resolve(self.cart_model);\n                })\n                .fail(function() {\n                    cart_promise.reject.apply(this, arguments);\n                });\n\n            return cart_promise;\n        };\n\n        application.getLayout().goToCart = function() {\n            return CartConfirmationHelpers._goToCart(this.application.getCart());\n        };\n\n        application.getLayout().showMiniCart = function() {\n            return CartConfirmationHelpers._showMiniCart(\n                this.application.getCart(),\n                null,\n                this.application\n            );\n        };\n\n        application.getLayout().showCartConfirmationModal = function() {\n            return CartConfirmationHelpers._showCartConfirmationModal(\n                this.application.getCart(),\n                null,\n                this.application\n            );\n        };\n\n        // Initializes the router\n        if (Configuration.get('modulesConfig.Cart.startRouter', true)) {\n            const pageType = application.getComponent('PageType');\n            pageType.registerPageType({\n                name: 'Cart.Detailed.View',\n                routes: ['cart', 'cart?*options'],\n                view: CartDetailedView,\n                defaultTemplate: {\n                    name: 'cart_detailed.tpl',\n                    displayName: 'Cart detailed default',\n                    thumbnail: Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                        'img/default-layout-cart.png'\n                    )\n                }\n            });\n        }\n\n        return CartComponent(application);\n    }\n};\n"]}