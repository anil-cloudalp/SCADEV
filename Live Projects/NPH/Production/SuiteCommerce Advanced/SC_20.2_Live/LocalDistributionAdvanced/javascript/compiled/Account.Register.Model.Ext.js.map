{"version":3,"sources":["Account.Register.Model.Ext.ts"],"names":[],"mappings":"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","file":"Account.Register.Model.Ext.js","sourcesContent":["/// <amd-module name=\"Account.Register.Model.Ext\"/>\nimport * as _ from 'underscore';\nimport existingModel = require('../../../Advanced/Account/JavaScript/Account.Register.Model');\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\n_.extend(existingModel.prototype, {\n\t\n\tvalidation: {\n\t\temail: {\n\t\t\trequired: true,\n\t\t\tpattern: 'email',\n\t\t\tmsg: Utils.translate('Valid Email is required')\n\t\t}\n\t,\tcompany: {\n\t\t\trequired: SC.ENVIRONMENT.siteSettings.registration.companyfieldmandatory === 'T',\n\t\t\tmsg: Utils.translate('Company Name is required')\n\t\t}\n\t\n\t,\tpaidforbyvalue: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('This field is required')\n\t\t}\n\t// ,\tpaidfortitle: {\n\t// \t\trequired: function(val, attr, computed) {\n\t// \t\t return (computed.paidforby == '1' || computed.paidforby == '2');\n\t// \t\t}\n\t// \t,\tmsg: Utils.translate('This field is required')\n\t// \t}\n\t,\tstatevalue: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('State is required')\n\t\t}\n\t,\tfirstname: {\n\t\t\trequired: function(val, attr, computed) {\n\t\t\t return (computed.paidforby == '1' || computed.paidforby == '2');\n\t\t\t}\n\t\t,\tmsg: Utils.translate('First Name is required')\n\t\t}\n\t,\tlastname: {\n\t\t\trequired: function(val, attr, computed) {\n\t\t\t return (computed.paidforby == '1' || computed.paidforby == '2');\n\t\t\t}\n\t\t,\tmsg: Utils.translate('Last Name is required')\n\t\t}\n\t/*,\tpaidfororganization: {\n\t\t\trequired: function(val, attr, computed) {\n\t\t\t return computed.paidforby == '2';\n\t\t\t}\n\t\t,\tmsg: Utils.translate('Organization is required')\n\t\t}*/\n\t,\tpaidforcity: {\n\t\t\trequired: function(val, attr, computed) {\n\t\t\t return computed.paidforby == '2';\n\t\t\t}\n\t\t,\tmsg: Utils.translate('City is required')\n\t\t}\n\t,\tpaidforstate: {\n\t\t\trequired: function(val, attr, computed) {\n\t\t\t return computed.paidforby == '2';\n\t\t\t}\n\t\t,\tmsg: Utils.translate('State is required')\n\t\t}\n\t,\tcategory: {\n\t\t\trequired: function(val, attr, computed) {\n\t\t\t return computed.paidforby == '2';\n\t\t\t}\n\t\t,\tmsg: Utils.translate('This field is required')\n\t\t}\n\t\n\t/*,\tattention: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('Attention is required')\n\t\t}*/\n\t,\taddr: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('Address is required')\n\t\t}\n\t,\tcity: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('City is required')\n\t\t}\n\t,\tcountry: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('Country is required')\n\t\t}\n\t,\tzipcode: {\n\t\t\tfn: Utils.validateZipCode\n\t\t}\n\t,\tphone: {\n\t\t\trequired: true\n\t\t\n\t\t,\tfn: Utils.validatePhone\n\t\t}\n\t,\tcustomertype: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('Customer type is required')\n\t\t}\n\t,\tcaptcha_val: {\n\t\t\trequired: true\n\t\t,\tmsg: Utils.translate('this is required')\n\t\t}\n\t,\tpassword: {\n\t\t\trequired: true,\n\t\t\tmsg: Utils.translate('Please enter a valid password')\n\t\t}\n\t,\tpassword2: [\n\t\t\t{\n\t\t\t\trequired: true,\n\t\t\t\tmsg: Utils.translate('Confirm password is required')\n\t\t\t},\n\t\t\t{\n\t\t\t\tequalTo: 'password',\n\t\t\t\tmsg: Utils.translate('New Password and Confirm Password do not match')\n\t\t\t}\n\t\t]\n    }\n\t\n});\n\nexport = existingModel;\n\n"]}