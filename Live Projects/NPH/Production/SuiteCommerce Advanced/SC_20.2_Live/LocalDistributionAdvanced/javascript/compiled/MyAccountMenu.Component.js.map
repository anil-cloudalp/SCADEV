{"version":3,"sources":["MyAccountMenu.Component.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAmCF,SAAS,eAAe,CAAC,WAAsC;QAC3D,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAS,IAA6B;YACtD,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,OAAS;QACL,UAAU,EAAE,UAAS,SAAS;YAC1B,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,kBAAkB,EAAE,UAAS,SAAS;YAClC,IAAM,IAAI,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;YACxC,IAAM,aAAa,GAAG,6BAAa,CAAC,WAAW,EAAE,CAAC;YAElD,OAAO,kCAAe,CAAC,MAAM,CAAC;gBAC1B,aAAa,EAAE,eAAe;gBAE9B,WAAW,EAAE,SAAS;gBAEtB,QAAQ,EAAE,UAAS,CAAqB;oBACpC,IAAM,KAAK,GAAU;wBACjB,EAAE,EAAE,CAAC,CAAC,EAAE;wBACR,KAAK,EAAE,CAAC,CAAC,KAAK;wBACd,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,kBAAkB,EAAE,CAAC,CAAC,kBAAkB;wBACxC,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC;qBAC5C,CAAC;oBACF,IAAI,CAAC,CAAC,GAAG,EAAE;wBACP,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;qBACrB;oBACD,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9B,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC;gBAED,aAAa,EAAE,UAAS,CAA0B;oBAC9C,IAAM,QAAQ,GAAa;wBACvB,EAAE,EAAE,CAAC,CAAC,EAAE;wBACR,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,KAAK,EAAE,CAAC,CAAC,KAAK;wBACd,GAAG,EAAE,CAAC,CAAC,GAAG;wBACV,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC;wBACzC,kBAAkB,EAAE,CAAC,CAAC,kBAAkB;qBAC3C,CAAC;oBACF,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBACpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC;aACJ,CAAC,CAAC;QACP,CAAC;KACJ,CAAC","file":"MyAccountMenu.Component.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"MyAccountMenu.Component\"/>\n\nimport * as _ from 'underscore';\nimport { Entry, MyAccountMenu, SubEntry } from '../../../Advanced/Header/JavaScript/MyAccountMenu';\n\nimport { SCBaseComponent } from '../../SC/JavaScript/SC.BaseComponent';\n\nimport MenuTreeView = require('./MenuTree.View');\n\ninterface MyAccountMenuPermission {\n    id: string;\n    group: string;\n    level: '0' | '1' | '2' | '3' | '4';\n}\ntype PermissionOperator = 'AND' | 'OR';\ninterface MyAccountMenuGroup {\n    id: string;\n    name: string;\n    url?: string;\n    index: number;\n    permission: MyAccountMenuPermission[];\n    permissionoperator: PermissionOperator;\n}\ninterface MyAccountMenuGroupEntry {\n    id: string;\n    groupid: string;\n    index: number;\n    name: string;\n    permission: MyAccountMenuPermission[];\n    permissionoperator: PermissionOperator;\n    url: string;\n}\n\nfunction parsePermission(permissions: MyAccountMenuPermission[]): string {\n    let concat = '';\n    _.each(permissions, function(item: MyAccountMenuPermission) {\n        concat = concat + item.group + '.' + item.id + '.' + item.level + ', ';\n    });\n    return concat.substring(0, concat.length - 2);\n}\n\nexport = {\n    mountToApp: function(container) {\n        container.registerComponent(this.componentGenerator(container));\n    },\n\n    componentGenerator: function(container) {\n        const menu = MenuTreeView.getInstance();\n        const myAccountMenu = MyAccountMenu.getInstance();\n\n        return SCBaseComponent.extend({\n            componentName: 'MyAccountMenu',\n\n            application: container,\n\n            addGroup: function(g: MyAccountMenuGroup) {\n                const entry: Entry = {\n                    id: g.id,\n                    index: g.index,\n                    name: g.name,\n                    permissionOperator: g.permissionoperator,\n                    permission: parsePermission(g.permission)\n                };\n                if (g.url) {\n                    entry.url = g.url;\n                }\n                myAccountMenu.addEntry(entry);\n                menu.updateMenuItemsUI();\n            },\n\n            addGroupEntry: function(e: MyAccountMenuGroupEntry) {\n                const subEntry: SubEntry = {\n                    id: e.id,\n                    name: e.name,\n                    index: e.index,\n                    url: e.url,\n                    entryId: e.groupid,\n                    permission: parsePermission(e.permission),\n                    permissionOperator: e.permissionoperator\n                };\n                myAccountMenu.addSubEntry(subEntry);\n                menu.updateMenuItemsUI();\n            }\n        });\n    }\n};\n"]}