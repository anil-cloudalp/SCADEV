{"version":3,"sources":["OrderHistory.List.View.Ext.ts"],"names":[],"mappings":"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","file":"OrderHistory.List.View.Ext.js","sourcesContent":["/// <amd-module name=\"OrderHistory.List.View.Ext\"/>\nimport * as _ from 'underscore';\nimport existingView = require('../../../Advanced/OrderHistory/JavaScript/OrderHistory.List.View');\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../../Advanced/SCA/JavaScript/Configuration';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\n\nimport OrderHistoryListTrackingNumberView = require('../../../Advanced/OrderHistory/JavaScript/OrderHistory.List.Tracking.Number.View');\nimport OrderHistoryCollection = require('../../../Advanced/OrderHistory/JavaScript/OrderHistory.Collection');\nimport RecordViewsActionableView = require('../../../Advanced/RecordViews/JavaScript/RecordViews.Actionable.View');\nimport Handlebars = require('../../../Commons/Utilities/JavaScript/Handlebars');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\n_.extend(existingView.prototype, {\n\t// @method initialize\n    initialize: function(options) {\n        this.application = options.application;\n\t\t\n\t\tvar fragment = Backbone.history.fragment;\n\t\t\t\t\n\t\tif(fragment.indexOf('filter=') != -1){\n\t\t\tBackbone.history.navigate('#purchases', {trigger:true});\n\t\t}\n\t\t\n        if (Backbone.history.fragment.indexOf('open-purchases') === 0) {\n            this.collection = new OrderHistoryCollection([], {\n                filters: 'status:open'\n            });\n            this.activeTab = 'open';\n        } else if (Backbone.history.fragment.indexOf('instore-purchases') === 0) {\n            this.collection = new OrderHistoryCollection([], {\n                filters: 'origin:instore'\n            });\n            this.activeTab = 'instore';\n        } else {\n            this.collection = new OrderHistoryCollection();\n            this.activeTab = 'all';\n        }\n        this.isSCISIntegrationEnabled = Configuration.get(\n            'siteSettings.isSCISIntegrationEnabled',\n            false\n        );\n\n        const isoDate = Utils.dateToString(new Date());\n\n        this.rangeFilterOptions = {\n            fromMin: '1800-01-02',\n            fromMax: isoDate,\n            toMin: '1800-01-02',\n            toMax: isoDate\n        };\n\n        this.listenCollection();\n\t\t\n\t\tvar self = this;\n\t\tvar profile = ProfileModel.getInstance();\n\t\tvar filterOptions1 = [];\n\t\t\n\t\tif(profile.get('isLoggedIn') === 'T'){\n\t\t\tfilterOptions1.push({\n\t\t\t\tvalue: profile.get('internalid')\n\t\t\t,\tname: profile.get('firstname') + \" \" + profile.get('lastname')\n\t\t\t,\tselected: true\n\t\t\t});\n\t\t}\n\t\t\t\n        // Manages sorting and filtering of the collection\n        this.listHeader = new ListHeaderView({\n            view: this,\n            application: this.application,\n            collection: this.collection,\n            sorts: this.sortOptions,\n            rangeFilter: 'date',\n            rangeFilterLabel: Utils.translate('From'),\n            hidePagination: true,\n            allowEmptyBoundaries: true,\n\t\t\tfilters: filterOptions1\n        });\n\t\tthis.collection.on('reset',function(){\n\t\t\t\n\t\t\tvar filterOptions = [];\t\n\t\t\t\n\t\t\tfilterOptions.push({\n\t\t\t\t\t\tvalue: 'ALL'\n\t\t\t\t\t,\tname: '-- ALL --'\n\t\t\t\t\t});\n\t\t\t\n\t\t\tif(_.has(this,\"listOptions\")){\n\t\t\t\t\n\t\t\t\t_.each(this.listOptions,function(obj){\n\t\t\t\t\t\n\t\t\t\t\tif(!_.isEmpty(obj)){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tfilterOptions.push(obj);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(filterOptions.length > 1){\t\n\t\t\tself.listHeader.filters = filterOptions;\n\t\t\t}\n\t\t\t\n\t\t});\n        this.collection.on('reset', this.showContent, this);\n    },\n\t_buildResultsView: function() {\n        const self = this;\n        let selectedColumns = [];\n\n        if (!Configuration.get().transactionListColumns.enableOrderHistory) {\n\t\t\t\n\t\t\tselectedColumns.push({label: 'Customer', id: 'entity', type:'entity'});\n            selectedColumns.push({ label: 'Date', id: 'trandate', type: 'date' });\n            selectedColumns.push({\n                label: 'Amount',\n                name: 'amount',\n                id: 'amount_formatted',\n                type: 'currency'\n            });\n\n            if (self.isSCISIntegrationEnabled) {\n                selectedColumns.push({ label: 'Origin', id: 'origin' });\n            } else {\n                selectedColumns.push({ label: 'Status', id: 'status', type: 'status' });\n            }\n        } else {\n            selectedColumns = Configuration.get().transactionListColumns.orderHistory;\n        }\n\n        const records_collection = new Backbone.Collection(\n            this.collection.map(function(order) {\n                const model = new Backbone.Model({\n                    title: new Handlebars.SafeString(\n                        Utils.translate('<span class=\"tranid\">$(0)</span>', order.get('tranid'))\n                    ),\n                    touchpoint: 'customercenter',\n                    detailsURL: `/purchases/view/${order.get('recordtype')}/${order.get(\n                        'internalid'\n                    )}`,\n                    recordType: order.get('recordtype'),\n                    id: order.get('internalid'),\n                    internalid: order.get('internalid'),\n                    trackingNumbers: order.get('trackingnumbers'),\n                    columns: self._buildColumns(selectedColumns, order)\n                });\n                return model;\n            })\n        );\n\n        return new BackboneCollectionView({\n            childView: RecordViewsActionableView,\n            collection: records_collection,\n            viewsPerRow: 1,\n            childViewOptions: {\n                actionView: OrderHistoryListTrackingNumberView,\n                actionOptions: {\n                    showContentOnEmpty: true,\n                    contentClass: '',\n                    collapseElements: true\n                },\n\t\t\t\thideTracking: true\n            }\n        });\n    }\n});\n\nexport = existingView;"]}