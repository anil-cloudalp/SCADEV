{"version":3,"sources":["OrderHistory.Details.View.Ext.ts"],"names":[],"mappings":"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","file":"OrderHistory.Details.View.Ext.js","sourcesContent":["/// <amd-module name=\"OrderHistory.Details.View.Ext\"/>\nimport * as _ from 'underscore';\nimport existingView = require('../../../Advanced/OrderHistory/JavaScript/OrderHistory.Details.View');\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport BigNumber = require('../../../Commons/Utilities/JavaScript/BigNumber');\nimport { GlobalViewsMessageView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Message.View';\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\n\n_.extend(existingView.prototype, {\n\t/* @method getBreadcrumbPages\n            getBreadcrumbPages: function() {\n                return [\n                {\n                    text: Utils.translate('Purchase History'),\n                    href: '/musician-resource-products'\n                },\n                {\n                    text: `#${this.model.get('tranid')}`,\n                    href: `/musician-resource-products/view/${this.model.get('recordtype')}/${this.model.get('id')}`\n                }\n            ];\n        }\n        \n        \n    ,*/\n\t // @method addToCart\n    addToCart: function(e) {\n        e.preventDefault();\n\n        const self = this;\n        const line_id = this.$(e.target).data('line-id');\n        const $form = this.$(e.target).closest('[data-type=\"order-item\"]');\n        const $alert_placeholder = $form.find('[data-type=alert-placeholder]');\n        const quantity =\n            this.$(e.target).data('partial-quantity') || this.$(e.target).data('item-quantity');\n        const selected_line = this.model.get('lines').get(line_id);\n\n        // The 'fulfillmentChoice' for reorders must be setted to 'ship'\n        if (selected_line.get('fulfillmentChoice')) {\n            selected_line.set('fulfillmentChoice', 'ship');\n        }\n\t\t\n\t\t//console.log(selected_line);\n\t\t//add imprint item lines\n\t\tvar imprintDetails\n\t\t,\tisCrossItem\n\t\t,\tisHolyItem\n\t\t,\timprintItemId = 0\n\t\t,\tcrossItemId = 0\n\t\t,\tholyItemId = 0;\n\t\t\n\t\tif(_.has(selected_line.get('options'),'models')){\n\t\t\t_.each(selected_line.get('options').models, function(opt:any){\n\t\t\t\t\n\t\t\t\tif(opt.get('cartOptionId') == \"custcol_appf_imprint_item_details\")\n\t\t\t\t\timprintDetails = !_.isUndefined(opt.get('value'))? opt.get('value').internalid : '';\n\t\t\t\t\n\t\t\t\tif(opt.get('cartOptionId') == \"custcol_appf_imprint_cross\")\n\t\t\t\t\tisCrossItem = !_.isUndefined(opt.get('value'))? opt.get('value').internalid : '';\n\t\t\t\t\n\t\t\t\tif(opt.get('cartOptionId') == \"custcol_appf_holy_bible\")\n\t\t\t\t\tisHolyItem = !_.isUndefined(opt.get('value'))? opt.get('value').internalid : '';\n\t\t\t});\n\t\t}\n\t\tif(imprintDetails){\n\t\t\tif(imprintDetails.indexOf('|') != -1){\n\t\t\t\t imprintItemId = parseInt(imprintDetails.split('|')[0]);\n\t\t\t \n\t\t\t\tif(isCrossItem == \"T\")\n\t\t\t\t\t crossItemId = parseInt(imprintDetails.split('|')[2]);\n\t\t\t\tif(isHolyItem == \"T\")\n\t\t\t\t\tholyItemId = parseInt(imprintDetails.split('|')[4]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar imprintItemQty = selected_line.get('quantity') || 0;\n\t\tvar imprintItemLines = [];\n\t\tif(imprintItemId && imprintItemQty){\n\t\t\t\n\t\t\timprintItemLines.push({\n\t\t\t\tquantity: imprintItemQty,\n\t\t\t\titem: {\n\t\t\t\t\tinternalid: imprintItemId\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif(crossItemId){\n\t\t\t\t\n\t\t\t\timprintItemLines.push({\n\t\t\t\t\tquantity: imprintItemQty,\n\t\t\t\t\titem: {\n\t\t\t\t\t\tinternalid: crossItemId\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(holyItemId){\n\t\t\t\timprintItemLines.push({\n\t\t\t\t\tquantity: imprintItemQty,\n\t\t\t\t\titem: {\n\t\t\t\t\t\tinternalid: holyItemId\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\timprintItemLines.push(selected_line);\n\t\t\n\t\tLiveOrderModel.getInstance().addLines(imprintItemLines).done(function() {\n\t\t\t\t\n\t\t\tself.trackEventReorder(selected_line);\n\t\t\t// show warning if some options were not set\n\t\t\tconst availableOptions = selected_line.get('item').get('itemoptions_detail').fields;\n\n\t\t\tconst areMissingOptions = !_.every(selected_line.get('options').models, function(\n\t\t\t\toptionModel: any\n\t\t\t) {\n\t\t\t\treturn _.find(availableOptions, function(availableOption: any) {\n\t\t\t\t\treturn optionModel.get('cartOptionId') === availableOption.internalid;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tlet message;\n\t\t\tif (!areMissingOptions) {\n\t\t\t\tmessage =\n\t\t\t\t\tquantity > 1\n\t\t\t\t\t\t? Utils.translate(\n\t\t\t\t\t\t\t  '$(0) Items successfully added to <a href=\"#\" data-touchpoint=\"viewcart\">your cart</a><br/>',\n\t\t\t\t\t\t\t  quantity\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: Utils.translate(\n\t\t\t\t\t\t\t  'Item successfully added to <a href=\"#\" data-touchpoint=\"viewcart\">your cart</a><br/>'\n\t\t\t\t\t\t  );\n\t\t\t} else {\n\t\t\t\tmessage =\n\t\t\t\t\tquantity > 1\n\t\t\t\t\t\t? Utils.translate(\n\t\t\t\t\t\t\t  '$(0) Items were added to <a href=\"#\" data-touchpoint=\"viewcart\">your cart</a> with variants<br/>',\n\t\t\t\t\t\t\t  quantity\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: Utils.translate(\n\t\t\t\t\t\t\t  'Item was added to <a href=\"#\" data-touchpoint=\"viewcart\">your cart</a> with variants<br/>'\n\t\t\t\t\t\t  );\n\t\t\t}\n\n\t\t\tconst alert = new GlobalViewsMessageView({\n\t\t\t\tmessage: message,\n\t\t\t\ttype: areMissingOptions ? 'warning' : 'success',\n\t\t\t\tclosable: true\n\t\t\t});\n\n\t\t\talert.show($alert_placeholder, 6000);\n\t\t});\n    },\n\tgetShippablePackages: function() {\n        const self = this;\n        const shippable_lines = this.getShippableLines();\n        const is_multi_ship_to = this.model.get('ismultishipto');\n        const ship_groups = {};\n        let amount = 0;\n\n        _.each(shippable_lines || [], function(line: any) {\n            if (\n                line.get('quantitybackordered') ||\n                line.get('quantitypicked') ||\n                line.get('quantitypacked')\n            ) {\n                const shipaddress = is_multi_ship_to\n                    ? line.get('shipaddress')\n                    : self.model.get('shipaddress');\n                const shipmethod = is_multi_ship_to\n                    ? line.get('shipmethod')\n                    : self.model.get('shipmethod');\n\n                if (line.get('quantitybackordered')) {\n                    let pending_line;\n\n                    if (line.get('quantitypacked') === line.get('quantity')) {\n                        pending_line = line;\n                    } else {\n                        pending_line = line.clone();\n\n                        pending_line.set('item', line.get('item').attributes);\n\n                        pending_line.set('quantity', line.get('quantitybackordered'));\n\n                        amount = new BigNumber(line.get('rate'))\n                            .times(pending_line.get('quantity'))\n                            .toNumber();\n                        pending_line.set('amount', amount);\n                    }\n\n                    const key_pending = [shipaddress, shipmethod, 'pending'].join('-');\n\n                    ship_groups[key_pending] = ship_groups[key_pending] || {\n                        internalid: key_pending,\n                        shipaddress: self.model\n                            .get('addresses')\n                            .findWhere({ internalid: shipaddress }),\n                        shipmethod: self.model\n                            .get('shipmethods')\n                            .findWhere({ internalid: shipmethod }),\n                        packageGroup: 'ship',\n                        status: {\n                            internalid: 'pending',\n                            name: Utils.translate('Pending shipment')\n                        },\n                        lines: []\n                    };\n\n                    ship_groups[key_pending].lines.push(pending_line);\n                }\n\n                if (line.get('quantitypicked') || line.get('quantitypacked')) {\n                    let picked_packed_line;\n\n                    let quantity = 0;\n\n                    if (line.get('quantitypicked')) {\n                        quantity += line.get('quantitypicked');\n                    }\n\n                    if (line.get('quantitypacked')) {\n                        quantity += line.get('quantitypacked');\n                    }\n\n                    if (quantity === line.get('quantity')) {\n                        picked_packed_line = line;\n                    } else {\n                        picked_packed_line = line.clone();\n\n                        picked_packed_line.set('quantity', quantity);\n\n                        amount = new BigNumber(line.get('rate'))\n                            .times(picked_packed_line.get('quantity'))\n                            .toNumber();\n\n                        picked_packed_line.set('amount', amount);\n\n                        picked_packed_line.set('item', line.get('item').attributes);\n                    }\n\n                    const key_processing = [shipaddress, shipmethod, 'processing'].join('-');\n\n                    ship_groups[key_processing] = ship_groups[key_processing] || {\n                        internalid: key_processing,\n                        shipaddress: self.model\n                            .get('addresses')\n                            .findWhere({ internalid: shipaddress }),\n                        shipmethod: self.model\n                            .get('shipmethods')\n                            .findWhere({ internalid: shipmethod }),\n                        packageGroup: 'ship',\n                        status: {\n                            internalid: 'picked_packed',\n                            name: Utils.translate('Processing shipment')\n                        },\n                        lines: []\n                    };\n\n                    ship_groups[key_processing].lines.push(picked_packed_line);\n                }\n            }\n        });\n\n        this.model.get('fulfillments').each(function(fulfillment) {\n            const shipaddress = self.model\n                .get('addresses')\n                .findWhere({ internalid: fulfillment.get('shipaddress') });\n            const shipmethod = self.model\n                .get('shipmethods')\n                .findWhere({ internalid: fulfillment.get('shipmethod') });\n\n            fulfillment.set('shipaddress', shipaddress);\n            fulfillment.set('shipmethod', shipmethod);\n\n            const lines = _.compact(\n                fulfillment.get('lines').map(function(line) {\n                    let fulfilled_line;\n                    const original_line = self.model.get('lines').get(line.get('internalid'));\n\n                    if (original_line && original_line.get('linegroup') === 'shippable') {\n                        // ignore instore lines\n                        fulfilled_line = original_line.clone();\n\n                        fulfilled_line.set('quantity', original_line.get('quantityfulfilled'));\n\n                        amount = new BigNumber(original_line.get('rate'))\n                            .times(fulfilled_line.get('quantity'))\n                            .toNumber();\n\n                        fulfilled_line.set('amount', amount);\n\n                        fulfilled_line.set('item', original_line.get('item'), { silent: true });\n\n                        return fulfilled_line;\n                    }\n                })\n            );\n\n            if (lines.length) {\n                ship_groups[fulfillment.get('internalid')] = ship_groups[\n                    fulfillment.get('internalid')\n                ] || {\n                    internalid: fulfillment.get('internalid'),\n                    shipaddress: shipaddress,\n                    shipmethod: shipmethod,\n                    packageGroup: 'ship',\n                    status: {\n                        internalid: 'shipped',\n                        name: Utils.translate('Shipped')\n                    },\n                    date: fulfillment.get('date'),\n\t\t\t\t\ttrackingLink: fulfillment.get('trackingLink'),\n                    trackingnumbers: fulfillment.get('trackingnumbers'),\n                    lines: []\n                };\n\n                ship_groups[fulfillment.get('internalid')].lines = lines;\n            }\n        });\n\n        return _.values(ship_groups);\n    }\n});\n\nexport = existingView;"]}