{"version":3,"sources":["GlobalViews.HostSelector.View.ts"],"names":[],"mappings":"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","file":"GlobalViews.HostSelector.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"GlobalViews.HostSelector.View\"/>\n\nimport * as _ from 'underscore';\nimport * as global_views_host_selector_tpl from 'global_views_host_selector.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class GlobalViews.HostSelector.View @extends Backbone.View\nconst GlobalViewsHostSelectorView: any = BackboneView.extend({\n    template: global_views_host_selector_tpl,\n\n    events: {\n        'change select[data-toggle=\"host-selector\"]': 'selectHost',\n        'click select[data-toggle=\"host-selector\"]': 'selectHostClick'\n    },\n\n    // @method selectHostClick @param {HTMLEvent} e\n    selectHostClick: function(e) {\n        e.stopPropagation();\n    },\n\n    // @method selectHost @param {HTMLEvent} e\n    selectHost: function(e) {\n        if (Configuration.currentTouchpoint === 'home') {\n            this.setHost(e);\n        } else {\n            this.setLang(e);\n        }\n    },\n\n    // @method setHref @param {String} url\n    setHref: function(url) {\n        window.location.href = Utils.getAbsoluteUrl(\n            'redirections.ssp?location=' + location.protocol + '//' + url\n        );\n    },\n\n    // @method setSearch @param {String} search\n    setSearch: function(search) {\n        window.location.search = search;\n    },\n\n    // @method getCurrentPath @returns {String}\n    getCurrentPath: function() {\n        return location.pathname;\n    },\n\n    // @method setHost @param {HTMLEvent} e\n    setHost: function(e) {\n        const host = jQuery(e.target).val();\n        let url;\n\n        const BackboneHistory: any = Backbone.History;\n        if (BackboneHistory._hasPushState) {\n            // Seo Engine is on, send him to the root\n            url = host;\n        } else {\n            // send it to the current path, it's probably a test site\n            url = host + this.getCurrentPath();\n        }\n\n        // redirects to url\n        this.setHref(url);\n    },\n\n    // @method setLang @param {HTMLEvent} e\n    setLang: function(e) {\n        const selected_host = jQuery(e.target).val();\n        const available_hosts = SC.ENVIRONMENT.availableHosts;\n        let selected_language;\n\n        for (let i = 0; i < available_hosts.length; i++) {\n            const host = available_hosts[i];\n            const lang: any = _(host.languages).findWhere({ host: selected_host });\n\n            if (lang && lang.locale) {\n                selected_language = lang;\n                break;\n            }\n        }\n\n        // use the param **\"lang\"** to pass this to the ssp environment\n        if (selected_language && selected_language.locale) {\n            const current_search = Utils.parseUrlOptions(window.location.search);\n\n            current_search.lang = selected_language.locale;\n\n            const search = _.reduce(\n                current_search,\n                function(memo, val, name) {\n                    return val ? memo + name + '=' + val + '&' : memo;\n                },\n                '?'\n            );\n\n            this.setSearch(search);\n\n            return search;\n        }\n    },\n\n    // @method getContext @return GlobalViews.HostSelector.View.Context\n    getContext: function() {\n        const is_home_touchpoint = Configuration.currentTouchpoint === 'home';\n\n        const use_parameter = !is_home_touchpoint;\n        const current_host = is_home_touchpoint\n            ? SC.ENVIRONMENT.currentHostString\n            : SC.ENVIRONMENT.currentLanguage.locale;\n        const available_hosts: any = _.map(SC.ENVIRONMENT.availableHosts, function(host: any) {\n            // @class GlobalViews.HostSelector.View.Context.Host\n            return {\n                // @property {Boolean} hasLanguages\n                hasLanguages: host.languages && host.languages.length,\n                // @property {String} title\n                title: host.title,\n                // @property {Array<GlobalViews.HostSelector.View.Context.Host.Language>} languages\n                languages: _.map(host.languages, function(language: any) {\n                    // @class GlobalViews.HostSelector.View.Context.Host.Language\n                    return {\n                        // @property {String} host\n                        host: language.host,\n                        // @property {String} displayName\n                        displayName: language.title || language.name,\n                        // @property {Boolean} isSelected\n                        isSelected: !!(\n                            (use_parameter && language.locale === current_host) ||\n                            language.host === current_host\n                        )\n                    };\n                })\n            };\n        });\n\n        // @class GlobalViews.HostSelector.View.Context\n        return {\n            // @property {Boolean} showHosts\n            showHosts: !!(available_hosts && available_hosts.length > 1),\n            // @property {Array<GlobalViews.HostSelector.View.Context.Host>} availableHosts\n            availableHosts: available_hosts,\n            // @property {String} currentHost\n            currentHost: current_host,\n            // @param {Boolean} useParameter\n            useParameter: use_parameter\n        };\n    }\n});\n\nexport = GlobalViewsHostSelectorView;\n"]}