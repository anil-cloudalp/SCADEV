{"version":3,"sources":["OrderHistory.List.View.Ext.ts"],"names":[],"mappings":"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","file":"OrderHistory.List.View.Ext.js","sourcesContent":["/// <amd-module name=\"OrderHistory.List.View.Ext\"/>\r\n\r\nimport * as _ from 'underscore';\r\n\r\nimport OrderHistoryListView = require('../../../Advanced/OrderHistory/JavaScript/OrderHistory.List.View');\r\n\r\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\r\nimport { Configuration } from '../../../Advanced/SCA/JavaScript/Configuration';\r\nimport OrderHistoryListTrackingNumberView = require('../../../Advanced/OrderHistory/JavaScript/OrderHistory.List.Tracking.Number.View');\r\nimport RecordViewsActionableView = require('../../../Advanced/RecordViews/JavaScript/RecordViews.Actionable.View');\r\nimport Handlebars = require('../../../Commons/Utilities/JavaScript/Handlebars');\r\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\r\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\r\n\r\n_.extend(OrderHistoryListView.prototype, {\r\n\r\n\r\n  initialize: _.wrap(OrderHistoryListView.prototype.initialize, function initialize(fn) {\r\n    fn.apply(this, _.toArray(arguments).slice(1));\r\n\r\n     this.isSCISIntegrationEnabled = false;\r\n  }),\r\n  _buildResultsView: function() {\r\n        const self = this;\r\n        let selectedColumns = [];\r\n\r\n        if (!Configuration.get().transactionListColumns.enableOrderHistory) {\r\n\t\t\tselectedColumns.push({ label: 'PO #', id: 'otherrefnum', type: 'po' });\r\n            selectedColumns.push({ label: 'Date', id: 'trandate', type: 'date' });\r\n            selectedColumns.push({\r\n                label: 'Amount',\r\n                name: 'amount',\r\n                id: 'amount_formatted',\r\n                type: 'currency'\r\n            });\r\n\r\n            if (self.isSCISIntegrationEnabled) {\r\n                selectedColumns.push({ label: 'Origin', id: 'origin' });\r\n            } else {\r\n                selectedColumns.push({ label: 'Status', id: 'status', type: 'status' });\r\n            }\r\n        } else {\r\n            selectedColumns = Configuration.get().transactionListColumns.orderHistory;\r\n        }\r\n\r\n        const records_collection = new Backbone.Collection(\r\n            this.collection.map(function(order) {\r\n                const model = new Backbone.Model({\r\n                    title: new Handlebars.SafeString(\r\n                        Utils.translate('<span class=\"tranid\">$(0)</span>', order.get('tranid'))\r\n                    ),\r\n                    touchpoint: 'customercenter',\r\n                    detailsURL: `/purchases/view/${order.get('recordtype')}/${order.get(\r\n                        'internalid'\r\n                    )}`,\r\n                    recordType: order.get('recordtype'),\r\n                    id: order.get('internalid'),\r\n                    internalid: order.get('internalid'),\r\n                    trackingNumbers: order.get('trackingnumbers'),\r\n                    columns: self._buildColumns(selectedColumns, order)\r\n                });\r\n                return model;\r\n            })\r\n        );\r\n\r\n        return new BackboneCollectionView({\r\n            childView: RecordViewsActionableView,\r\n            collection: records_collection,\r\n            viewsPerRow: 1,\r\n            childViewOptions: {\r\n                actionView: OrderHistoryListTrackingNumberView,\r\n                actionOptions: {\r\n                    showContentOnEmpty: true,\r\n                    contentClass: '',\r\n                    collapseElements: true\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n});\r\n\r\nexport = OrderHistoryListView;\r\n"]}